import 'package:utils/utils.dart';

/// Base class for all all client-side errors that can be generated by the app
/// Extend upon this class to cover known and handled exception types
sealed class AppException implements Exception {
  /// Creates a new [AppException] instance
  AppException(this.code, this.message);

  /// The exception's error code
  final String code;

  /// Human readable exception message
  final String message;

  @override
  String toString() => message;
}

// =============================================================================
// Persistence related exceptions
// =============================================================================

/// Exceptions related to persistence and local storage must extend this class
sealed class LocalStorageException extends AppException {
  LocalStorageException(super.code, super.message);
}

/// Exception thrown in case of local storage read issue
class LocalStorageReadException extends LocalStorageException {
  /// Creates a new [LocalStorageReadException] instance
  LocalStorageReadException()
    : super(
        'local-storage-read-exception',
        'Unable to read local storage'.hardcoded,
      );
}

/// Exception thrown in case of local storage write issue
class LocalStorageWriteException extends LocalStorageException {
  /// Creates a new [LocalStorageWriteException] instance
  LocalStorageWriteException()
    : super(
        'local-storage-write-exception',
        'Unable to write local storage'.hardcoded,
      );
}
